apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.triplet.play'

android {
    def isRunningOnTravis = System.getenv("CI") == "true"

    compileSdkVersion 28
    defaultConfig {
        applicationId "me.jfenn.alarmio"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 18
        versionName "1.0.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        if (isRunningOnTravis) {
            def githubToken = System.getenv("GITHUB_TOKEN_PUB")
            buildConfigField "String", "GITHUB_TOKEN", "\"$githubToken\""
        } else {
            buildConfigField "String", "GITHUB_TOKEN", 'null'
        }
    }
    signingConfigs {
    	release
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

    if (isRunningOnTravis) {
        buildTypes.release.signingConfig = signingConfigs.release
        signingConfigs.release.storeFile = file("../key.jks")
        signingConfigs.release.storePassword = System.getenv("KEYSTORE_PASSWORD")
        signingConfigs.release.keyAlias = System.getenv("KEYSTORE_ALIAS")
        signingConfigs.release.keyPassword = System.getenv("KEYSTORE_ALIAS_PASSWORD")
    }

    /**
     * This is used to circumvent some of Google Play's restrictions
     * and make some features available in the OSS version that wouldn't
     * be allowed on Google Play.
     */
    flavorDimensions "distribution"
    productFlavors {
        gplay {
            dimension "distribution"
        }

        oss {
            dimension "distribution"
        }
    }

    // enable Jave 8 features
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

play {
	serviceAccountCredentials = file("../service.json")
	track = "alpha"
}

task printVersionName {
	doLast {
		println android.defaultConfig.versionName
	}
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // debugging tools
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    ossImplementation 'me.jfenn:crasher:0.0.2'

    // support libraries
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    // media dependencies
    implementation 'com.google.android.exoplayer:exoplayer-core:2.8.2'
    implementation 'com.google.android.exoplayer:exoplayer-hls:2.8.2'

    // uncategorized libraries
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    implementation 'com.afollestad:aesthetic:0.7.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'me.jahirfiquitiva:FABsMenu:1.1.4'
    implementation 'com.luckycatlabs:SunriseSunsetCalculator:1.2'

    implementation 'me.jfenn:timedatepickers:0.0.6'
    implementation 'me.jfenn:Attribouter:0.1.5'
    implementation 'me.jfenn:SlideActionView:0.0.2'
    implementation 'me.jfenn:SunriseSunsetView:0.0.3'
    implementation 'me.jfenn:AndroidUtils:0.0.1'
}
